<!DOCTYPE html>
<html lang="en-gb">
	{!
		var symbolTypes = [
			'properties',
			'methods',
			'instanceProperties',
			'instanceMethods',
			'constructors',
			'namespaces'
		];
		var symbolTypeNames = {
			properties: 'Properties',
			methods: 'Methods',
			instanceProperties: 'Instance Properties',
			instanceMethods: 'Instance Methods',
			constructors: 'Constructors',
			namespaces: 'Namespaces'
		};
	
		var symbol = data.symbol;
	!}
	<head>
		<meta http-equiv="content-type" content="text/html; charset={+IO.encoding+}">
		<meta name="generator" content="JsDoc Toolkit">
		<title>Woosh Documentation - {+ h(data.symbol.alias) +}</title>
		<link rel="stylesheet" type="text/css" href="../../../assets/docstyle.css">
	</head>
	<body>
		<div id="wooshOutput">
			<div id="wooshBanner">
				<h1>{+ h(data.symbol.alias) +}</h1>
				<p>{+ summary(symbol.desc) +}</p>
			</div>
			<div id="wooshUa"></div>
			<div id="wooshModeSwitcher">
				<h2 id="docTypeHeading">Documentation Type</h2>
				{+data.modeSwitch+}
			</div>
			
			<div id="nav">
				<h2 id="navHeading">Nav</h2>
				{+data.nav+}
			</div>
			
			<div id="content">
				{!
					var furtherDesc = further(symbol.desc);
				!}
				<if test="furtherDesc">
					<h2>Description</h2>
					{+ further(symbol.desc) +}
				</if>
				
				<if test="symbol.see.length">
					<for each="see" in="symbol.see">
						<div class="see">{+ h(see) +}</div>
					</for>
				</if>
				
				<if test="data.symbol.is('CONSTRUCTOR')">
					<dl class="apiList">
						<dt><span>Constructor</span></dt>
						<dd>
							<div class="summary"></div>
							<div class="apiItemDetail">
								<h3>Synopsis</h3>
								<div class="signiture"><pre><code>{+ makeSignature(symbol) +}</code></pre></div>
								<if test="symbol.params.length">
									<h3>Parameters</h3>
									<dl class="params">
										<for each="param" in="symbol.params">
											<dt>{+ h(param.name) +}</dt>
											<dd>
												<div>{+ h(param.type) +}</div>
												<div>{+ param.isOptional ? 'Optional' : '' +}</div>
												<div>{+ h(param.defaultValue) +}</div>
												<div>{+ autoHtml(param.desc) +}</div>
											</dd>
										</for>
									</dl>
								</if>
								<if test="symbol.example.length">
									<h3>Examples</h3>
									<for each="example" in="symbol.example">
										<pre class="example"><code>{+ formatExample(example.desc) +}</code></pre>
									</for>
								</if>
							</div>
						</dd>
					</dl>
				</if>
				
				<for each="symbolType" in="symbolTypes">
					{! var symbols = data.members[symbolType] !}
					<if test="symbols.length">
						<h2>{+ h( symbolTypeNames[symbolType] ) +}</h2>
						<dl class="apiList">
							<for each="symbol" in="symbols">
								{!
									var furtherDesc = further(symbol.desc);
								!}
								<dt><span>{+ hasOwnPage(symbol) ? resolveLinks('{@link ' + symbol.alias + ' ' + symbol.name + '}') : h(symbol.name) +}</span></dt>
								<dd>
									<p class="summary">{+ summary(symbol.desc) +}</p>
									<if test="!hasOwnPage(symbol)">
										<div class="apiItemDetail">
											<h3>Synopsis</h3>
											<div class="signiture"><pre><code>{+ makeSignature(symbol) +}</code></pre></div>
											<if test="furtherDesc">
												<h3>Description</h3>
												<div class="description">{+ furtherDesc +}</div>
											</if>
											<for each="returnItem" in="symbol.returns">
												<h3>Returns</h3>
												<div class="return"><p>{+ h(returnItem.type + ' ' + returnItem.desc) +}</p></div>
											</for>
											<if test="symbol.params.length">
												<h3>Parameters</h3>
												<dl class="params">
													<for each="param" in="symbol.params">
														<dt>{+ h(param.name) +}</dt>
														<dd>
															<div>{+ h(param.type) +}</div>
															<div>{+ param.isOptional ? 'Optional' : '' +}</div>
															<div>{+ h(param.defaultValue) +}</div>
															<div>{+ autoHtml(param.desc) +}</div>
														</dd>
													</for>
												</dl>
											</if>
											<if test="symbol.example.length">
												<h3>Examples</h3>
												<for each="example" in="symbol.example">
													<pre class="example"><code>{+ formatExample(example.desc) +}</code></pre>
												</for>
											</if>
											<if test="symbol.see.length">
												<h3>Also See</h3>
												<ul class="see">
													<for each="see" in="symbol.see">
														<li>{+ h(see) +}</li>
													</for>
												</ul>
											</if>
										</div>
									</if>
								</dd>
							</for>
						</dl>
					</if>
				</for>
			</div>
		</div>
	</body>
</html>
